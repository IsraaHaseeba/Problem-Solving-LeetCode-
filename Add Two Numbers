/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    int getSize(ListNode* node)
{
    int size = 0;
    while (node != NULL) {
        node = node->next;
        size++;
    }
    return size;
}
    
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       ListNode *res=l1,*p1,*p2,*last; 
        int val1, val2;
       
        int num=0;
        
        p2=l2;
        p1=l1;
        
        while(p1 || p2 || num){
            
            if(!p1){
                p1= new ListNode();
                last->next=p1;
            }
            
            if(!p1) val1=0;
            else val1= p1->val;
            
            if(!p2) val2=0;
            else val2=p2->val;
            
            int sum=val1+val2+num;
            num=sum/10;
            p1->val= sum%10;
            
            last=p1;
            p1=p1->next;
            
            if(p2) p2=p2->next;
        }
        return res;
        
        
        
    }
};
    
